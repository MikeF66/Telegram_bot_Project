import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, FSInputFile, CallbackQuery
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.context import FSMContext
from deep_translator import GoogleTranslator
from config import TOKEN
import keyboards as kb

bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())

@dp.message(CommandStart())
async def start(message: Message, state: FSMContext):
    await state.update_data(my_name=message.from_user.first_name)
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!', reply_markup=await kb.builder_keyboard())

@dp.message(F.text == "–ü—Ä–∏–≤–µ—Ç")
async def hello(message: Message, state: FSMContext):
    await state.update_data(my_name=message.from_user.first_name)
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!')

@dp.message(F.text == "–ü–æ–∫–∞")
async def bye(message: Message, state: FSMContext):
    await state.update_data(my_name=message.from_user.first_name)
    await message.answer(f'–î–æ —Å–≤–∏–¥–∞–Ω–∏—è, {message.from_user.first_name}!') #reply_markup=kb.reply_keyboard)

@dp.message(Command('link'))
async def link(message: Message):
    await message.answer(f'–î–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Å—Å—ã–ª–∫–∏:', reply_markup=kb.inline_keyboard)

@dp.message(Command('dynamic'))
async def dynamic(message: Message):
    await message.answer(f'–î–æ—Å—Ç—É–ø–Ω—ã –æ–ø—Ü–∏–∏', reply_markup=kb.inline_key_board)

@dp.callback_query(F.data == 'show_more')
async def show_more(callback: CallbackQuery):
    await callback.answer('–û–ø—Ü–∏–∏ –ø–æ–¥–≥—Ä—É–∂–∞—é—Ç—Å—è')
    await callback.message.edit_text('–î–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –æ–ø—Ü–∏–∏', reply_markup=kb.in_line_keyboard)

@dp.callback_query(F.data == 'option1')
async def show_more(callback: CallbackQuery, state: FSMContext):
    user_data = await state.get_data()
    my_name = user_data.get('my_name', '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
    await callback.answer('üï¶')
    await callback.message.answer(f'{my_name}, —ç—Ç–æ —Ç–µ–∫—Å—Ç –æ–ø—Ü–∏–∏ ‚Ññ 1')

@dp.callback_query(F.data == 'option2')
async def show_more(callback: CallbackQuery, state: FSMContext):
    user_data = await state.get_data()
    my_name = user_data.get('my_name', '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
    await callback.answer('üï¶')
    await callback.message.answer(f'{my_name}, —ç—Ç–æ —Ç–µ–∫—Å—Ç –æ–ø—Ü–∏–∏ ‚Ññ 2')

@dp.message(Command('help'))
async def help(message: Message):
    await message.answer('–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ —É–º–µ–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç–æ—Ç –±–æ—Ç, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –≤ –º–µ–Ω—é.'
                         '\n\n–û–Ω —É–º–µ–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n '
                         '/start  - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n '
                         '/help  - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ \n '
                         '/city –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞  - —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ —ç—Ç–æ–º –≥–æ—Ä–æ–¥–µ \n'
                         '/en –∏ —Ç–µ–∫—Å—Ç - –ø–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ \n'
                         '/ru –∏ —Ç–µ–∫—Å—Ç –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ - –ø–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ä—É—Å—Å–∫–∏–π \n'
                         '$photo  - –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ —Å–≤–æ–µ —Ñ–æ—Ç–æ')


async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())